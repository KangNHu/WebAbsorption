package com.liveeasy.web.absorption.core.schehule;import com.alibaba.fastjson.JSON;import redis.clients.jedis.Jedis;import redis.clients.jedis.JedisPool;import us.codecraft.webmagic.ResultItems;import us.codecraft.webmagic.selector.Json;public class RedisDataResultItemsSchedule extends AbstractDataResultItemsSchedule implements DuplicateRemover<ResultItems> {    private static final String  RESULT_ITEMS = "result_items_";    private static final String  SET_RESULT_ITEMS = "set_result_items_";    private JedisPool jedisPool;    public RedisDataResultItemsSchedule(JedisPool jedisPool){        super();        this.jedisPool = jedisPool;    }    public JedisPool getJedisPool() {        return jedisPool;    }    @Override    protected ResultItems getResultItems() {        Jedis jedis = jedisPool.getResource();        try {        }finally {            jedisPool.returnResource(jedis);        }        return null;    }    @Override    public void addElement(ResultItems element) {        Jedis jedis = jedisPool.getResource();        try {            jedis.lpush(getResultItemsKey() , JSON.toJSONString(element));        }finally {            jedisPool.returnResource(jedis);        }    }    @Override    public void redoQueue(ResultItems element) {        Jedis jedis = jedisPool.getResource();        try{            jedis.srem(getSetResultItemsKey() , JSON.toJSONString(element.getAll()));            jedis.rpush(getResultItemsKey() , JSON.toJSONString(element));        }finally {            jedisPool.returnResourceObject(jedis);        }    }    @Override    public boolean isDuplicate(ResultItems resultItems) {        Jedis jedis = jedisPool.getResource();        try{            return jedis.sadd(getSetResultItemsKey() , JSON.toJSONString(resultItems.getAll())) == 0;        }finally {            jedisPool.returnResource(jedis);        }    }    @Override    public void resetDuplicateCheck() {        Jedis jedis = jedisPool.getResource();        try {            jedis.del(getSetResultItemsKey());        }finally {            jedisPool.returnResource(jedis);        }    }    public String getSetResultItemsKey(){        return SET_RESULT_ITEMS + task.getUUID();    }    public String getResultItemsKey(){        return RESULT_ITEMS + task.getUUID();    }}