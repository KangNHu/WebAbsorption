package com.liveeasy.web.absorption.core.schehule;import com.liveeasy.web.absorption.core.pipeline.DataStreamPipeline;import com.liveeasy.web.absorption.core.pipeline.WebAbsorptionPipeline;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import us.codecraft.webmagic.Task;import java.io.DataInputStream;import java.io.IOException;import java.net.URL;import java.util.List;public abstract class AbstractDataStreamSchedule extends AbstractDataSchedule<String>{    private Logger logger = LoggerFactory.getLogger(AbstractDataStreamSchedule.class);    protected DataStreamPipeline dataStreamPipeline;    public AbstractDataStreamSchedule(){        super();    }    @Override    public void setDataStreamPipeline(DataStreamPipeline dataStreamPipeline){        this.dataStreamPipeline = dataStreamPipeline;    }    @Override    public DataStreamPipeline getDataStreamPipeline() {        return dataStreamPipeline;    }    @Override    protected void execute() {        String dataStreamUrl = getDataStreamUrl();        if(null != dataStreamUrl) {            DataInputStream dataInputStream = null;            try {                URL url = new URL(dataStreamUrl);                dataInputStream = new DataInputStream(url.openStream());                dataStreamPipeline.streamPipeline(dataInputStream);            } catch (Exception e) {                logger.error("下载图片{}失败", dataStreamUrl, e);                downloaderPlugin.picDownloaderError(dataStreamUrl, this);            } finally {                if (null != dataInputStream) {                    try {                        dataInputStream.close();                    } catch (IOException e) {                        logger.error("关闭流失败", e);                    }                }            }        }    }    @Override    public void setWebAbsorptionPipelines(List<WebAbsorptionPipeline> webAbsorptionPipelines) {    }    @Override    public List<WebAbsorptionPipeline> getWebAbsorptionPipelines() {        return null;    }    protected abstract String getDataStreamUrl();}