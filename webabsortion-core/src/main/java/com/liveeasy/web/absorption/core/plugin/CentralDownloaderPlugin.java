package com.liveeasy.web.absorption.core.plugin;import com.liveeasy.web.absorption.core.factory.Product;import org.apache.http.HttpResponse;import us.codecraft.webmagic.*;import us.codecraft.webmagic.downloader.HttpClientDownloader;import java.io.IOException;/** * 中央下载器 */public class CentralDownloaderPlugin extends HttpClientDownloader implements Product{    private static UserAgent userAgent = UserAgent.newInstance();    private static final int START_SUCCEED_CODE = 200;    private static final int END_SUCCEED_CODE = 300;    private DownloaderPlugin downloaderPlugin;    public CentralDownloaderPlugin(){        super();    }    public CentralDownloaderPlugin setDownloaderPlugin(DownloaderPlugin downloaderPlugin){        this.downloaderPlugin = downloaderPlugin;        return this;    }    @Override    public Page download(Request request, Task task) {        if(null != downloaderPlugin){            downloaderPlugin.setTask(task);            downloaderPlugin.downloadPreposition(task.getSite() , userAgent.getAgents());        }        Page page = super.download(request, task);        return page;    }    @Override    protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {        int statusCode = httpResponse.getStatusLine().getStatusCode();        if(statusCode < START_SUCCEED_CODE || statusCode >= END_SUCCEED_CODE){            if(null != downloaderPlugin){                downloaderPlugin.responseCodeError(request , httpResponse);            }        }        return super.handleResponse(request, charset, httpResponse, task);    }    @Override    protected void onError(Request request) {        if(null != downloaderPlugin){            downloaderPlugin.downloadError(request);        }        super.onError(request);    }    @Override    public Product createClone() throws CloneNotSupportedException {        return (Product) super.clone();    }}