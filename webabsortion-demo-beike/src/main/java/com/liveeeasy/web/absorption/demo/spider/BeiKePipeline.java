package com.liveeeasy.web.absorption.demo.spider;import com.liveeasy.web.absorption.core.annotation.SPI;import com.liveeasy.web.absorption.core.pipeline.SimpleWebAbsorptionPipeline;import com.liveeeasy.web.absorption.demo.spider.service.IEstateService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import us.codecraft.webmagic.ResultItems;import us.codecraft.webmagic.Task;import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.concurrent.BlockingQueue;@SPI("beiKeSpider")public class BeiKePipeline extends SimpleWebAbsorptionPipeline {    private static Logger logger = LoggerFactory.getLogger(BeiKePipeline.class);    private BlockingQueue<Map<String , Object>> blockingQueue;    private IEstateService estateService;    public void setEstateService(IEstateService estateService){        this.estateService = estateService;    }    public void setBlockingQueue(BlockingQueue blockingQueue){        this.blockingQueue = blockingQueue;    }    @Override    public void pipeline(ResultItems resultItems, Task task) {        blockingQueue.add(resultItems.getAll());        if(blockingQueue.size() > 2){            List<Map<String , Object>> list = new ArrayList<>();            blockingQueue.drainTo(list);            estateService.batchInsert(list);        }    }}